---
name: "Build"

"on":
  workflow_dispatch:
    inputs:
      ## Runner to use
      runner:
        description: "Runner"
        type: string
        default: "ubuntu-latest"

      ## Whether to build with bzlmod
      bzlmod:
        description: "Enable Bzlmod"
        type: boolean
        default: false

      ## Whether to run tests
      tests:
        description: "Run Tests"
        type: boolean
        default: true

      ## Whether we should run integration tests (main target)
      main:
        description: "Main target"
        type: boolean
        default: false

      ## Whether we should report coverage
      coverage:
        description: "Coverage"
        type: boolean
        default: false

      ## Bazel version to use
      bazel_version:
        description: "Bazel version"
        type: string
        default: "7.0.0"

      ## Configuration profile to use
      bazel_config:
        description: "Bazel profile"
        type: string
        default: "bazel7"

      ## Additional flags to pass to Bazel
      flags:
        description: "Flags"
        type: string
        default: ""

  workflow_call:
    inputs:
      runner:
        description: "Runner"
        type: string
        default: "ubuntu-latest"
      label:
        description: "Label"
        type: string
        default: "Ubuntu"
      bzlmod:
        description: "Enable Bzlmod"
        type: boolean
        default: false
      tests:
        description: "Run Tests"
        type: boolean
        default: true
      labs:
        description: "Skip Failures"
        type: boolean
        default: false
      bazel_version:
        description: "Bazel version"
        type: string
        default: "7.0.0"
      bazel_config:
        description: "Bazel profile"
        type: string
        default: "bazel7"
      main:
        description: "Main target"
        type: boolean
        default: false
      flags:
        description: "Flags"
        type: string
        default: ""
      coverage:
        description: "Coverage"
        type: boolean
        default: false

    secrets:
      ## Secrets: BuildBuddy API key
      BUILDBUDDY_APIKEY:
        required: false

      ## Secrets: Buildless API key
      BUILDLESS_APIKEY:
        required: false

      ## Secrets: Codecov Reporting Token
      CODECOV_TOKEN:
        required: false

env:
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
  BUILDBUDDY_APIKEY: ${{ secrets.BUILDBUDDY_APIKEY }}

permissions:
  contents: read

jobs:
  build:
    name: "Build"
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    continue-on-error: ${{ inputs.labs }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            bazel.less.build:443
            bcr.bazel.build:443
            github.com:443
            github.com:80
            global.less.build:443
            mirror.bazel.build:443
            objects.githubusercontent.com:443
            releases.bazel.build:443
            remote.buildbuddy.io:443
      - name: "Setup: Checkout"
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: "Setup: msbuild"
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0
        if: ${{ contains(inputs.runner, 'windows') }}
      - name: "Setup: Bazel"
        uses: bazel-contrib/setup-bazel@90b352333885f9fb6bf262d8e659f01b6219cc25 # 0.8.3
      - name: "Setup: Cache"
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: "~/.cache/bazel"
          key: bazel-v3
      - name: "Configure: Bazel Services"
        shell: bash
        if: contains(env.BUILDLESS_APIKEY || '', 'user_')
        run: |
          echo "build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_APIKEY }}" >> local.bazelrc
          echo "build --remote_header=x-api-key=${{ secrets.BUILDLESS_APIKEY }}" >> local.bazelrc
      - name: "Configure: Bzlmod"
        if: inputs.bzlmod
        run: |
          echo "build --config=bzlmod" >> local.bazelrc
      - name: "Build: Project"
        continue-on-error: ${{ inputs.labs }}
        shell: bash
        run: bazel build --config=ci ${{ inputs.flags }} "//example/native"
      - name: "Testsuite"
        continue-on-error: ${{ inputs.labs }}
        if: inputs.coverage
        shell: bash
        run: bazel coverage --config=ci ${{ inputs.flags }} "//tools/..." "//tests/..." "//.aspect/..."
      - name: "Report: Coverage"
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        if: inputs.coverage
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: bazel-out/_coverage/_coverage_report.dat
          flags: tools
          verbose: true
          fail_ci_if_error: true # optional (default = false)

  integration-tests:
    name: ${{ matrix.label }}
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    continue-on-error: ${{ inputs.labs || matrix.labs }}
    if: inputs.main
    strategy:
      fail-fast: false
      matrix:
        label: ["BCR"]
        target: ["sample"]
        action: ["build"]
        directory: ["./example/integration_tests/bzlmod"]
        labs: [false]
        skip: [false]
        include:
          # Test: BCR Sample
          - label: BCR
            target: sample
            action: build
            directory: "./example/integration_tests/bzlmod"
            labs: false
            skip: false

          # Test: Workspace Sample
          - label: Workspace
            target: sample
            action: build
            directory: "./example/integration_tests/workspace"
            labs: false
            skip: false

          # Test: Bazel 4
          - label: Bazel 4
            target: sample
            action: build
            directory: "./example/integration_tests/bazel4"
            labs: false
            skip: ${{ contains(inputs.runner, 'windows') }}

          # Test: Bazel 5
          - label: Bazel 5
            target: sample
            action: build
            directory: "./example/integration_tests/bazel5"
            labs: false
            skip: ${{ contains(inputs.runner, 'windows') }}

          # Test: Bazel 6
          - label: Bazel 6
            target: sample
            action: build
            directory: "./example/integration_tests/bazel6"
            labs: false
            skip: false

          # Test: Inert
          - label: Inert
            target: sample
            action: build
            directory: "./example/integration_tests/inert"
            labs: false
            skip: false

          # Test: Inert Workspace
          - label: Inert Workspace
            target: sample
            action: build
            directory: "./example/integration_tests/inert-workspace"
            labs: false
            skip: false

          # Test: Components on CE
          - label: Components (CE)
            target: sample
            action: build
            directory: "./example/integration_tests/components-ce"
            labs: false
            skip: false

          # Test: Components on GVM
          - label: Components (Oracle)
            target: sample
            action: build
            directory: "./example/integration_tests/components-oracle"
            labs: false
            skip: false

          # Test: Java Toolchain
          - label: Java Toolchain
            target: sample
            action: build
            directory: "./example/integration_tests/java-toolchain"
            labs: false
            skip: false

          # Test: Shared Library
          - label: Shared Library
            target: sample
            action: build
            directory: "./example/integration_tests/shared-lib"
            labs: false
            skip: false

          # Test: Maven Artifacts
          - label: Maven Artifacts
            target: sample
            action: build
            directory: "./example/integration_tests/maven-artifacts"
            labs: false
            skip: false

          # Test: Legacy Rules
          - label: Legacy Rules
            target: sample
            action: build
            directory: "./example/integration_tests/legacy-rules"
            labs: false
            skip: ${{ contains(inputs.runner, 'windows') }}

          # Test: Legacy GVM
          - label: Legacy GVM
            target: sample
            action: build
            directory: "./example/integration_tests/legacy-gvm"
            labs: false
            skip: ${{ contains(inputs.runner, 'windows') }}

          # Test: GVM CE 17
          - label: GraalVM CE 17
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-ce-17"
            labs: false
            skip: false

          # Test: GVM CE 20
          - label: GraalVM CE 20
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-ce-20"
            labs: false
            skip: false

          # Test: GVM CE 21
          - label: GraalVM CE 21
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-ce-21"
            labs: false
            skip: false

          # Test: GVM CE 22
          - label: GraalVM CE 22
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-ce-22"
            labs: false
            skip: false

          # Test: GVM CE 23
          - label: GraalVM CE 23
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-ce-23"
            labs: false
            skip: false

          # Test: Oracle GVM 17
          - label: Oracle GraalVM 17
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-oracle-17"
            labs: false
            skip: false

          # Test: Oracle GVM 20
          - label: Oracle GraalVM 20
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-oracle-20"
            labs: false
            skip: false

          # Test: Oracle GVM 21
          - label: Oracle GraalVM 21
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-oracle-21"
            labs: false
            skip: false

          # Test: Oracle GVM 22
          - label: Oracle GraalVM 22
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-oracle-22"
            labs: false
            skip: false

          # Test: Oracle GVM 23
          - label: Oracle GraalVM 23
            target: sample
            action: build
            directory: "./example/integration_tests/graalvm-oracle-23"
            labs: false
            skip: false

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            bazel.less.build:443
            bcr.bazel.build:443
            github.com:443
            github.com:80
            global.less.build:443
            mirror.bazel.build:443
            objects.githubusercontent.com:443
            releases.bazel.build:443
            download.oracle.com:443
            gds.oracle.com:443
            remote.buildbuddy.io:443
            objectstorage.*.oraclecloud.com:443
            www.graalvm.org:443
            repo1.maven.org:443
            maven.pkg.st:443
      - name: "Setup: Checkout"
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: "Setup: msbuild"
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0
        if: ${{ contains(inputs.runner, 'windows') }}
      - name: "Setup: Bazel"
        uses: bazel-contrib/setup-bazel@90b352333885f9fb6bf262d8e659f01b6219cc25 # 0.8.3
      - name: "Configure: Bazel Version"
        shell: bash
        if: matrix.skip != true && inputs.bazel_version != '' && inputs.bazel_config != ''
        run: |
          echo "${{ inputs.bazel_version }}" > .bazelversion
          echo "import %workspace%/tools/bazel/${{ inputs.bazel_config }}.bazelrc" > version.bazelrc
      - name: "Configure: Bazel Services"
        shell: bash
        if: contains(env.BUILDLESS_APIKEY || '', 'user_')
        run: |
          echo "build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_APIKEY }}" >> local.bazelrc
          echo "build --remote_header=x-api-key=${{ secrets.BUILDLESS_APIKEY }}" >> local.bazelrc
      - name: "Test: ${{ matrix.label }}"
        if: matrix.skip == false
        continue-on-error: ${{ inputs.labs }}
        working-directory: ${{ matrix.directory }}
        shell: bash
        run: bazel ${{ matrix.action || 'build' }} "${{ matrix.target || '//...' }}"
